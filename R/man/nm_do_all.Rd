% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nm_do_all.r
\name{nm_do_all}
\alias{nm_do_all}
\title{Perform All Steps for Meteorological Normalization}
\usage{
nm_do_all(
  df = NULL,
  model = NULL,
  value = NULL,
  feature_names = NULL,
  variables_resample = NULL,
  split_method = "random",
  fraction = 0.75,
  model_config = NULL,
  n_samples = 300,
  seed = 7654321,
  n_cores = NULL,
  aggregate = TRUE,
  weather_df = NULL,
  verbose = TRUE
)
}
\arguments{
\item{df}{Data frame containing the input data.}

\item{model}{Pre-trained model for normalization. If not provided, a model will be trained.}

\item{value}{The target variable name as a string.}

\item{feature_names}{The names of the features used for training and normalization.}

\item{variables_resample}{The names of the variables to be resampled for normalization. Default is NULL (all feature names except date_unix).}

\item{split_method}{The method for splitting data into training and testing sets. Default is 'random'.}

\item{fraction}{The proportion of the data to be used for training. Default is 0.75.}

\item{model_config}{A list containing configuration parameters for model training.}

\item{n_samples}{Number of samples to generate for normalization. Default is 300.}

\item{seed}{A random seed for reproducibility. Default is 7654321.}

\item{n_cores}{Number of CPU cores to use for parallel processing. Default is system's total minus one.}

\item{aggregate}{Logical indicating whether to aggregate the results. Default is TRUE.}

\item{weather_df}{Optional data frame containing weather data for resampling.}

\item{verbose}{Should the function print progress messages? Default is TRUE.}
}
\value{
A list containing the normalized data frame and model statistics.
}
\description{
\code{nm_do_all} performs the entire process of training a model, normalizing the data, and collecting model statistics.
}
\examples{
\dontrun{
library(dplyr)
df <- data.frame(date = Sys.time() + seq(1, 100, by = 1),
                 pollutant = rnorm(100), temp = rnorm(100), humidity = rnorm(100))
result <- nm_do_all(df, value = "pollutant", feature_names = c("temp", "humidity"), n_samples = 300, seed = 12345)
}
}
